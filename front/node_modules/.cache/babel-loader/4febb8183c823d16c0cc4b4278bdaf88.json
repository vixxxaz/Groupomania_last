{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\Vincent\\\\front\\\\src\\\\pages\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from 'react';\nimport axios from '../../api/axios';\nimport { UserContext } from '../../context/userContext';\nimport './index.css';\nimport authHeader from '../../services/auth-header';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'; //endpoint api\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst REGISTER_URL = '/auth/login';\nexport default function Login() {\n  _s();\n\n  const testauthHeader = authHeader();\n  const [success, setSuccess] = useState(false);\n  const {\n    toggleModals,\n    modalState\n  } = useContext(UserContext);\n  const [validation, setValidation] = useState('');\n  const inputs = useRef([]);\n\n  const addInputs = el => {\n    if (el && !inputs.current.includes(el)) {\n      inputs.current.push(el);\n    }\n  }; //fonction qui envois la requete pour se login \n\n\n  const handleForm = async e => {\n    e.preventDefault(inputs.current);\n\n    try {\n      //recupere  les données des input et les passe dans une variable data\n      const email = inputs.current[0].value;\n      const password = inputs.current[1].value;\n      const data = JSON.stringify({\n        email: email,\n        password: password\n      }); //envois la requete post, avec les données data et set le localstorage\n\n      await axios.post(REGISTER_URL, {\n        data\n      }).then(res => {\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\n        setValidation('Connexion reussi !');\n        setSuccess(true);\n        toast.promise('success');\n      });\n      console.log(testauthHeader.authorization);\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setValidation('pas de reponse serveur');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setValidation('Couple mot de passe/email incorrect');\n      } else {\n        setValidation('Echec de la connexion');\n      }\n    }\n  };\n\n  toast.success('bravo');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 1000,\n        position: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : modalState.signInModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalLogin-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleForm,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signInEmail\",\n            children: \" Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: addInputs,\n            type: \"email\",\n            name: \"email\",\n            required: true,\n            id: \"signInEmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"signUpPwd\",\n            children: \" Mot de passe :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: addInputs,\n            type: \"password\",\n            name: \"pwd\",\n            required: true,\n            id: \"signInPwd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: validation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-login\",\n            children: \"Connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleModals('signUp'),\n          children: \"S'inscrire ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"2xLR95aSknz9R6O4Lu3qHlCmWlw=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useRef","useState","axios","UserContext","authHeader","ToastContainer","toast","REGISTER_URL","Login","testauthHeader","success","setSuccess","toggleModals","modalState","validation","setValidation","inputs","addInputs","el","current","includes","push","handleForm","e","preventDefault","email","value","password","data","JSON","stringify","post","then","res","localStorage","setItem","promise","console","log","authorization","err","response","status","signInModal"],"sources":["C:/Users/Utilisateur/Desktop/Vincent/front/src/pages/Login/index.jsx"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport axios from '../../api/axios';\nimport { UserContext } from '../../context/userContext'\nimport './index.css'\nimport authHeader from '../../services/auth-header'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n\n//endpoint api\nconst REGISTER_URL = '/auth/login';\n\n\n\nexport default function Login() {\n\n    const testauthHeader = authHeader();\n    const [success, setSuccess] = useState(false);\n    const { toggleModals, modalState } = useContext(UserContext)\n    const [validation, setValidation] = useState('');\n    const inputs = useRef([])\n\n    const addInputs = el => {\n        if (el && !inputs.current.includes(el)) {\n            inputs.current.push(el)\n        }\n    }\n\n    \n    //fonction qui envois la requete pour se login \n    const handleForm = async (e) => {\n\n        e.preventDefault(inputs.current)\n\n        try {\n             //recupere  les données des input et les passe dans une variable data\n            const email = inputs.current[0].value;\n            const password = inputs.current[1].value;\n            const data = JSON.stringify({ email: email, password: password });\n\n            //envois la requete post, avec les données data et set le localstorage\n            await axios.post(REGISTER_URL\n                , { data })\n\n                .then(res => {\n                    localStorage.setItem(\"user\", JSON.stringify(res.data));\n                    setValidation('Connexion reussi !')\n                    setSuccess(true);\n                    toast.promise('success')\n                })\n\n           \n            console.log(testauthHeader.authorization);\n            \n\n        } catch (err) {\n            if (!err?.response) {\n                setValidation('pas de reponse serveur');\n            } else if (err.response?.status === 409) {\n                setValidation('Couple mot de passe/email incorrect');\n            } else {\n                setValidation('Echec de la connexion')\n            }\n        }\n    }\n\n    toast.success('bravo')\n\n    return (\n        <>\n           { success ? ( \n                <div className='login'>\n                    <ToastContainer \n                    autoClose={1000} \n                    position=\"center\"\n                    />\n                </div>              \n             ) : (\n                modalState.signInModal && (\n                    <div className='login'>\n                        <div className='modalLogin-content'>\n                            <h2>Connexion</h2>\n\n                            <form onSubmit={handleForm}>\n                                <label htmlFor=\"signInEmail\"> Email :</label>\n                                <br />\n                                <input\n                                    ref={addInputs}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    required\n                                    id=\"signInEmail\"\n                                />\n                                <br />\n                                <label htmlFor=\"signUpPwd\"> Mot de passe :</label>\n                                <br />\n                                <input\n                                    ref={addInputs}\n                                    type=\"password\"\n                                    name=\"pwd\"\n                                    required\n                                    id=\"signInPwd\"\n                                />\n                                <br />\n                                <p>{validation}</p>\n                                <button className='btn-login'>Connecter</button>\n                            </form>\n                            <button onClick={() => toggleModals('signUp')}>S'inscrire ?</button>\n                        </div>\n                    </div>\n                )\n            )\n            }\n        </>\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}